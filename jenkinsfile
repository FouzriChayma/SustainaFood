pipeline {
    agent any

    stages {
        // ✅ Étape 1: Installer les dépendances
        stage('Install Dependencies') {
            steps {
                script {
                    // Backend dependencies
                    dir('sustainafood-backend') {
                        sh 'npm install'
                    }
                    // Frontend dependencies
                    dir('sustainafood-frontend') {
                        sh 'npm install --legacy-peer-deps'
                    }
                }
            }
        }

        // ✅ Étape 2: Exécuter tous les tests (unitaires + fonctionnels)
        stage('Run All Tests') {
            steps {
                script {
                    dir('sustainafood-backend') {
                        echo 'Running all backend tests (unit + functional)...'
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            sh 'npx jest "test/*.test.js" --detectOpenHandles --forceExit'
                        }
                        echo 'Backend tests completed.'
                    }

                    dir('sustainafood-frontend') {
                        echo 'Running frontend tests...'
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            sh 'npm test'
                        }
                        echo 'Frontend tests completed.'
                    }
                }
            }
        }

        // ✅ Étape 3: Build application
        stage('Build Application') {
            steps {
                script {
                    // Backend build (optional, uncomment if needed)
                    dir('sustainafood-backend') {
                        echo 'Building backend...'
                        // sh 'npm run build' // Uncomment if backend build exists
                        echo 'Backend build completed.'
                    }

                    // Frontend build
                    dir('sustainafood-frontend') {
                        echo 'Building frontend...'

                        // Install optional fontawesome (if not in package.json)
                        sh 'npm install @fortawesome/fontawesome-svg-core'
                        sh 'npm install @fortawesome/react-fontawesome'
                        sh 'npm install @fortawesome/free-solid-svg-icons'

                        // Build command
                        sh 'npm run build'
                        echo 'Frontend build completed.'
                    }
                }
            }
        }

        // ✅ Étape 4: Analyse SonarQube
        stage('SonarQube Analysis') {
            steps {
                script {
                    sh 'node -v' // Check Node.js version for debug

                    def scannerHome = tool 'scanner' // Adjust 'scanner' to your Jenkins Sonar tool name
                    withSonarQubeEnv {
                        // Run sonar-scanner
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }
    }
}
