pipeline {
    agent any

    environment {
        MONGO_URI = 'mongodb://localhost:27017/sustainafood'
        JWT_SECRET = 'tonSecret' // Remplace si besoin
    }

    stages {

        stage('Start MongoDB') {
            steps {
                script {
                    sh '''
if [ ! "$(docker ps -q -f name=mongodb)" ]; then
  if [ "$(docker ps -aq -f status=exited -f name=mongodb)" ]; then
    docker start mongodb
  else
    docker run -d -p 27017:27017 --name mongodb -v mongo-data:/data/db mongo
  fi
else
  echo "MongoDB already running"
fi
'''
                }
            }
        }

        stage('Wait for MongoDB') {
            steps {
                script {
                    sh '''
until nc -z localhost 27017; do   
  echo "Waiting for MongoDB to be ready..."
  sleep 1
done
'''
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    dir('sustainafood-backend') { sh 'npm install' }
                    dir('sustainafood-frontend') { sh 'npm install --legacy-peer-deps' }
                }
            }
        }

        stage('Run Backend Unit Tests') {
            steps {
                script {
                    dir('sustainafood-backend') {
                        echo 'ðŸš€ Lancement des tests backend (Jest + Supertest)...'
                        sh 'npm test'
                    }
                }
            }
        }

        stage('Build Application') {
            steps {
                script {
                    dir('sustainafood-frontend') {
                        sh 'npm install @fortawesome/fontawesome-svg-core'
                        sh 'npm install @fortawesome/react-fontawesome'
                        sh 'npm install @fortawesome/free-solid-svg-icons'
                        sh 'npm run build'
                    }
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }
    }
}
