version: '3.8'

services:
  db:
    image: mongo:4.2
    container_name: db
    restart: always
    environment:
      MONGO_INITDB_DATABASE: sustainafood
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./data/dump:/dump

  app: # Votre backend Node.js
    build: .
    image: localhost:8083/nodeapp:6.0 # Ou le nom de votre image backend
    container_name: back
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - db
      - ai_service # L'ancien service AI (si vous le gardez)
      - sustinia_ai_service # Dépendance au nouveau service AI
    environment:
      - MONGODB_URI=mongodb://db:27017/sustainafood
      # Ajoutez l'URL pour le nouveau service AI
      - SUSTINIA_AI_SERVICE_URL=http://sustinia_ai_service:5000 # Communication interne Docker
    volumes:
      - .:/app
      - /app/node_modules

  # Ancien service AI (celui que vous aviez déjà)
  # ai_service:
  #   image: walaammar/sustainafood-ai-service:latest # ou localhost:8083/sustainafood-ai-service:latest
  #   container_name: back_ai_original # Renommé pour clarté
  #   restart: unless-stopped
  #   ports:
  #     - "5001:5000" # Hôte:Conteneur

  # NOUVEAU SERVICE AI (depuis sustinia-ai)
  sustinia_ai_service: # Nom du service dans Docker Compose
    # Utilisez l'image construite par votre pipeline pour sustinia-ai
    # Exemple si poussé sur Docker Hub:
    image: walaammar/ai:latest
    # Exemple si construit localement et non poussé :
    # image: sustaina-ai:latest # S'assurer que le nom correspond à celui utilisé lors du build
    # build: ../sustinia-ai # Alternative si vous voulez le construire ici, mais moins idéal pour la séparation
    container_name: sustinia_ai_container # Nom du conteneur
    restart: unless-stopped
    ports:
      # Mapper un port différent sur l'hôte pour éviter les conflits avec l'autre ai_service
      # Le port interne du conteneur (après les deux-points) est 5000 (celui exposé par Gunicorn)
      - "5002:5000" # Hôte:Conteneur
    # Si votre app.py a besoin de variables d'environnement, ajoutez-les ici
    # environment:
    #   - FLASK_ENV=production

  front:
    image: walaammar/soustaina_front:10
    ports:
      - "86:86"
    container_name: front
    restart: unless-stopped
    depends_on:
      - app
      # - ai_service 
      - sustinia_ai_service # Le nouveau

volumes:
  mongo-data: